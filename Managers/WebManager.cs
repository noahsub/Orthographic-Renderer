////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WebManager.cs
// This file manages web operations such as opening URLs.
//
// Author(s): https://github.com/noahsub
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Diagnostics;
using System.Net.Http;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Orthographic.Renderer.Managers;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WEB MANAGER CLASS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// <summary>
/// Manages web operations such as opening URLs.
/// </summary>
public static class WebManager
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // OPEN URL
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    /// <summary>
    /// Opens the specified URL in the default web browser.
    /// </summary>
    /// <param name="url">The URL to open.</param>
    public static void OpenUrl(string url)
    {
        Process.Start(new ProcessStartInfo { FileName = url, UseShellExecute = true });
    }
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // API CALLS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    /// <summary>
    /// Get the latest version of the application from the GitHub API.
    /// </summary>
    /// <returns>The latest version of the application.</returns>
    public static async Task<string> GetLatestVersion()
    {
        const string url = "https://api.github.com/repos/noahsub/Orthographic-Renderer/releases/latest";
        using var client = new HttpClient();
        client.DefaultRequestHeaders.UserAgent.TryParseAdd("request");
        var response = await client.GetAsync(url);
        response.EnsureSuccessStatusCode();
        var responseBody = await response.Content.ReadAsStringAsync();
        var latestRelease = JObject.Parse(responseBody);
        // Get the tag name of the latest release
        var tagName = latestRelease["tag_name"]?.ToString();
        // Remove the 'v' from the tag name
        return tagName?[1..] ?? string.Empty;
    }
}
