////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ColourSelector.axaml.cs
// This file contains the logic for the ColourSelector control.
//
// Copyright (C) 2024 noahsub
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using Avalonia;
using Avalonia.Controls;
using Avalonia.Markup.Xaml;
using Avalonia.Media;
using AvaloniaColorPicker;
using ColorPicker = Avalonia.Controls.ColorPicker;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Orthographic.Renderer.Controls;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// COLOUR SELECTOR CLASS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public partial class ColourSelector : UserControl
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // EVENT HANDLERS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Event handler for when the colour is changed.
    /// </summary>
    public event EventHandler ColourChanged;

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Initializes a new instance of the <see cref="ColourSelector"/> class.
    /// </summary>
    public ColourSelector()
    {
        InitializeComponent();

        // Set the text of the colour label
        ColourLabel.Content = ColourPicker.Color.ToString();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // COLOUR CONVERSIONS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Converts the RGBA values of the colour picker to a hex colour.
    /// </summary>
    /// <returns></returns>
    public string GetHexColour()
    {
        // Get the RGBA values of the colour picker
        int r = ColourPicker.Color.R;
        int g = ColourPicker.Color.G;
        int b = ColourPicker.Color.B;
        int a = ColourPicker.Color.A;
        // Convert the RGBA values to a hex colour and return it
        return $"#{r:X2}{g:X2}{b:X2}{a:X2}";
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // EVENTS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Event handler for when the colour selector is changed.
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void LightColourPicker_OnPropertyChanged(
        object? sender,
        AvaloniaPropertyChangedEventArgs e
    )
    {
        // If the colour property has changed
        if (e.Property == ColorButton.ColorProperty)
        {
            // Invoke the colour changed event
            ColourChanged?.Invoke(this, e);
            // Set the text of the colour label
            ColourLabel.Content = ColourPicker.Color.ToString().ToUpper();
            // Set the fill of the colour rectangle
            ColourRectangle.Fill = new SolidColorBrush(ColourPicker.Color);
        }
    }
}
