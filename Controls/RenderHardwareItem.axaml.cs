////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RenderHardwareItem.axaml.cs
// This file contains the logic for the RenderHardwareItem control.
//
// Copyright (C) 2024 noahsub
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using System.Collections.Generic;
using Avalonia;
using Avalonia.Controls;
using Avalonia.Markup.Xaml;
using Avalonia.Media;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Orthographic.Renderer.Controls;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RENDER HARDWARE ITEM CLASS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public partial class RenderHardwareItem : UserControl
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// The constructor for the RenderHardwareItem control.
    /// </summary>
    /// <param name="name">The name of the device</param>
    /// <param name="type">The type of device</param>
    /// <param name="engines">The engines the device is compatible with</param>
    public RenderHardwareItem(string name, string type, List<string> engines)
    {
        // Initialize the control.
        InitializeComponent();

        // Set the name and type of the hardware item.
        RenderHardwareNameLabel.Content = $"{type} | {name}";

        // Set the engines of the hardware item.

        // Add each engine to the stack panel.
        foreach (var engine in engines)
        {
            var engineLabel = new Label();
            engineLabel.Content = engine;

            engineLabel.Foreground = new SolidColorBrush(Color.Parse("#38b178"));

            EngineTypesStackPanel.Children.Add(engineLabel);
        }
    }
}
