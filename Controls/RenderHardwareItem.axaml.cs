////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RenderHardwareItem.axaml.cs
// This file contains the logic for the RenderHardwareItem control.
//
// Copyright (C) 2024 noahsub
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using System.Collections.Generic;
using Avalonia;
using Avalonia.Controls;
using Avalonia.Markup.Xaml;
using Avalonia.Media;
using Orthographic.Renderer.Entities;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Orthographic.Renderer.Controls;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RENDER HARDWARE ITEM CLASS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public partial class RenderHardwareItem : UserControl
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// The constructor for the RenderHardwareItem control.
    /// </summary>
    /// <param name="renderHardware">The render hardware to display.</param>
    public RenderHardwareItem(RenderHardware renderHardware)
    {
        // Initialize the control.
        InitializeComponent();

        // Set the name and type of the hardware item.
        RenderHardwareNameLabel.Content = $"{renderHardware.Type} | {renderHardware.Name}";

        // Add each engine to the stack panel.
        foreach (var framework in renderHardware.Frameworks)
        {
            var frameworkLabel = new Label
            {
                Content = framework,
                Foreground = new SolidColorBrush(Color.Parse("#38b178"))
            };
            FrameworksStackPanel.Children.Add(frameworkLabel);
        }
    }
}
