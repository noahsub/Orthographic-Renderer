////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Warning.axaml.cs
// This file contains the logic for the warning window of the application.
//
// Author(s): https://github.com/noahsub
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using Avalonia.Controls;
using Avalonia.Input;
using Avalonia.Interactivity;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NAMESPACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Orthographic.Renderer.Windows;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RENDER COMPLETE CLASS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// <summary>
/// Represents the render complete window of the application.
/// </summary>
public partial class Warning : Window
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // INITIALIZATION
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Initializes a new instance of the <see cref="RenderComplete"/> class.
    /// </summary>
    public Warning()
    {
        InitializeComponent();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // SET VALUES
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Sets the values to be displayed in the render complete window.
    /// </summary>
    /// <param name="message">The warning message to display.</param>
    public void SetWarning(string message)
    {
        WarningLabel.Content = message;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // EVENTS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /// <summary>
    /// Handles the click event of the Close button.
    /// </summary>
    private void CloseButton_OnClick(object? sender, RoutedEventArgs e)
    {
        Close();
    }

    private void InputElement_OnPointerPressed(object? sender, PointerPressedEventArgs e)
    {
        // if cursor is on within the first 30 pixels of the window, move the window
        if (e.GetCurrentPoint(this).Position.Y < 30)
        {
            BeginMoveDrag(e);
        }
    }
}
